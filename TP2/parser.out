Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> assignment SEMICOLON
Rule 5     statement -> escrever SEMICOLON
Rule 6     statement -> entrada SEMICOLON
Rule 7     statement -> funcao
Rule 8     statement -> lista
Rule 9     statement -> map
Rule 10    statement -> fold
Rule 11    assignment -> ID EQUALS expression
Rule 12    escrever -> ESCREVER expression
Rule 13    entrada -> ENTRADA LPAREN expression RPAREN
Rule 14    funcao -> FUNCAO ID LPAREN param_list RPAREN statement_list FIM
Rule 15    param_list -> ID
Rule 16    param_list -> param_list COMMA ID
Rule 17    param_list -> empty
Rule 18    lista -> LISTA LPAREN expression_list RPAREN
Rule 19    expression_list -> expression
Rule 20    expression_list -> expression_list COMMA expression
Rule 21    map -> MAP LPAREN expression COMMA expression RPAREN
Rule 22    fold -> FOLD LPAREN expression COMMA expression COMMA expression RPAREN
Rule 23    expression -> expression PLUS expression
Rule 24    expression -> expression MINUS expression
Rule 25    expression -> expression TIMES expression
Rule 26    expression -> expression DIVIDE expression
Rule 27    expression -> expression AND expression
Rule 28    expression -> expression OR expression
Rule 29    expression -> NOT expression
Rule 30    expression -> LPAREN expression RPAREN
Rule 31    expression -> NUMBER
Rule 32    expression -> ID
Rule 33    expression -> ID EXCLAMATION_MARK
Rule 34    expression -> ID QUESTION_MARK
Rule 35    expression -> STRING
Rule 36    expression -> expression CONCATENATE expression
Rule 37    expression -> TRUE
Rule 38    expression -> FALSE
Rule 39    empty -> <empty>

Terminals, with rules where they appear

AND                  : 27
COMMA                : 16 20 21 22 22
CONCATENATE          : 36
DIVIDE               : 26
ENTRADA              : 13
EQUALS               : 11
ESCREVER             : 12
EXCLAMATION_MARK     : 33
FALSE                : 38
FIM                  : 14
FOLD                 : 22
FUNCAO               : 14
ID                   : 11 14 15 16 32 33 34
LISTA                : 18
LPAREN               : 13 14 18 21 22 30
MAP                  : 21
MINUS                : 24
NOT                  : 29
NUMBER               : 31
OR                   : 28
PLUS                 : 23
QUESTION_MARK        : 34
RPAREN               : 13 14 18 21 22 30
SEMICOLON            : 4 5 6
STRING               : 35
TIMES                : 25
TRUE                 : 37
error                : 

Nonterminals, with rules where they appear

assignment           : 4
empty                : 17
entrada              : 6
escrever             : 5
expression           : 11 12 13 19 20 21 21 22 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 30 36 36
expression_list      : 18 20
fold                 : 10
funcao               : 7
lista                : 8
map                  : 9
param_list           : 14 16
program              : 0
statement            : 2 3
statement_list       : 1 3 14

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment SEMICOLON
    (5) statement -> . escrever SEMICOLON
    (6) statement -> . entrada SEMICOLON
    (7) statement -> . funcao
    (8) statement -> . lista
    (9) statement -> . map
    (10) statement -> . fold
    (11) assignment -> . ID EQUALS expression
    (12) escrever -> . ESCREVER expression
    (13) entrada -> . ENTRADA LPAREN expression RPAREN
    (14) funcao -> . FUNCAO ID LPAREN param_list RPAREN statement_list FIM
    (18) lista -> . LISTA LPAREN expression_list RPAREN
    (21) map -> . MAP LPAREN expression COMMA expression RPAREN
    (22) fold -> . FOLD LPAREN expression COMMA expression COMMA expression RPAREN

    ID              shift and go to state 11
    ESCREVER        shift and go to state 12
    ENTRADA         shift and go to state 13
    FUNCAO          shift and go to state 14
    LISTA           shift and go to state 15
    MAP             shift and go to state 16
    FOLD            shift and go to state 17

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    escrever                       shift and go to state 5
    entrada                        shift and go to state 6
    funcao                         shift and go to state 7
    lista                          shift and go to state 8
    map                            shift and go to state 9
    fold                           shift and go to state 10

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment SEMICOLON
    (5) statement -> . escrever SEMICOLON
    (6) statement -> . entrada SEMICOLON
    (7) statement -> . funcao
    (8) statement -> . lista
    (9) statement -> . map
    (10) statement -> . fold
    (11) assignment -> . ID EQUALS expression
    (12) escrever -> . ESCREVER expression
    (13) entrada -> . ENTRADA LPAREN expression RPAREN
    (14) funcao -> . FUNCAO ID LPAREN param_list RPAREN statement_list FIM
    (18) lista -> . LISTA LPAREN expression_list RPAREN
    (21) map -> . MAP LPAREN expression COMMA expression RPAREN
    (22) fold -> . FOLD LPAREN expression COMMA expression COMMA expression RPAREN

    $end            reduce using rule 1 (program -> statement_list .)
    ID              shift and go to state 11
    ESCREVER        shift and go to state 12
    ENTRADA         shift and go to state 13
    FUNCAO          shift and go to state 14
    LISTA           shift and go to state 15
    MAP             shift and go to state 16
    FOLD            shift and go to state 17

    statement                      shift and go to state 18
    assignment                     shift and go to state 4
    escrever                       shift and go to state 5
    entrada                        shift and go to state 6
    funcao                         shift and go to state 7
    lista                          shift and go to state 8
    map                            shift and go to state 9
    fold                           shift and go to state 10

state 3

    (2) statement_list -> statement .

    ID              reduce using rule 2 (statement_list -> statement .)
    ESCREVER        reduce using rule 2 (statement_list -> statement .)
    ENTRADA         reduce using rule 2 (statement_list -> statement .)
    FUNCAO          reduce using rule 2 (statement_list -> statement .)
    LISTA           reduce using rule 2 (statement_list -> statement .)
    MAP             reduce using rule 2 (statement_list -> statement .)
    FOLD            reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    FIM             reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 19


state 5

    (5) statement -> escrever . SEMICOLON

    SEMICOLON       shift and go to state 20


state 6

    (6) statement -> entrada . SEMICOLON

    SEMICOLON       shift and go to state 21


state 7

    (7) statement -> funcao .

    ID              reduce using rule 7 (statement -> funcao .)
    ESCREVER        reduce using rule 7 (statement -> funcao .)
    ENTRADA         reduce using rule 7 (statement -> funcao .)
    FUNCAO          reduce using rule 7 (statement -> funcao .)
    LISTA           reduce using rule 7 (statement -> funcao .)
    MAP             reduce using rule 7 (statement -> funcao .)
    FOLD            reduce using rule 7 (statement -> funcao .)
    $end            reduce using rule 7 (statement -> funcao .)
    FIM             reduce using rule 7 (statement -> funcao .)


state 8

    (8) statement -> lista .

    ID              reduce using rule 8 (statement -> lista .)
    ESCREVER        reduce using rule 8 (statement -> lista .)
    ENTRADA         reduce using rule 8 (statement -> lista .)
    FUNCAO          reduce using rule 8 (statement -> lista .)
    LISTA           reduce using rule 8 (statement -> lista .)
    MAP             reduce using rule 8 (statement -> lista .)
    FOLD            reduce using rule 8 (statement -> lista .)
    $end            reduce using rule 8 (statement -> lista .)
    FIM             reduce using rule 8 (statement -> lista .)


state 9

    (9) statement -> map .

    ID              reduce using rule 9 (statement -> map .)
    ESCREVER        reduce using rule 9 (statement -> map .)
    ENTRADA         reduce using rule 9 (statement -> map .)
    FUNCAO          reduce using rule 9 (statement -> map .)
    LISTA           reduce using rule 9 (statement -> map .)
    MAP             reduce using rule 9 (statement -> map .)
    FOLD            reduce using rule 9 (statement -> map .)
    $end            reduce using rule 9 (statement -> map .)
    FIM             reduce using rule 9 (statement -> map .)


state 10

    (10) statement -> fold .

    ID              reduce using rule 10 (statement -> fold .)
    ESCREVER        reduce using rule 10 (statement -> fold .)
    ENTRADA         reduce using rule 10 (statement -> fold .)
    FUNCAO          reduce using rule 10 (statement -> fold .)
    LISTA           reduce using rule 10 (statement -> fold .)
    MAP             reduce using rule 10 (statement -> fold .)
    FOLD            reduce using rule 10 (statement -> fold .)
    $end            reduce using rule 10 (statement -> fold .)
    FIM             reduce using rule 10 (statement -> fold .)


state 11

    (11) assignment -> ID . EQUALS expression

    EQUALS          shift and go to state 22


state 12

    (12) escrever -> ESCREVER . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 23

state 13

    (13) entrada -> ENTRADA . LPAREN expression RPAREN

    LPAREN          shift and go to state 31


state 14

    (14) funcao -> FUNCAO . ID LPAREN param_list RPAREN statement_list FIM

    ID              shift and go to state 32


state 15

    (18) lista -> LISTA . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 33


state 16

    (21) map -> MAP . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 34


state 17

    (22) fold -> FOLD . LPAREN expression COMMA expression COMMA expression RPAREN

    LPAREN          shift and go to state 35


state 18

    (3) statement_list -> statement_list statement .

    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    ESCREVER        reduce using rule 3 (statement_list -> statement_list statement .)
    ENTRADA         reduce using rule 3 (statement_list -> statement_list statement .)
    FUNCAO          reduce using rule 3 (statement_list -> statement_list statement .)
    LISTA           reduce using rule 3 (statement_list -> statement_list statement .)
    MAP             reduce using rule 3 (statement_list -> statement_list statement .)
    FOLD            reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)
    FIM             reduce using rule 3 (statement_list -> statement_list statement .)


state 19

    (4) statement -> assignment SEMICOLON .

    ID              reduce using rule 4 (statement -> assignment SEMICOLON .)
    ESCREVER        reduce using rule 4 (statement -> assignment SEMICOLON .)
    ENTRADA         reduce using rule 4 (statement -> assignment SEMICOLON .)
    FUNCAO          reduce using rule 4 (statement -> assignment SEMICOLON .)
    LISTA           reduce using rule 4 (statement -> assignment SEMICOLON .)
    MAP             reduce using rule 4 (statement -> assignment SEMICOLON .)
    FOLD            reduce using rule 4 (statement -> assignment SEMICOLON .)
    $end            reduce using rule 4 (statement -> assignment SEMICOLON .)
    FIM             reduce using rule 4 (statement -> assignment SEMICOLON .)


state 20

    (5) statement -> escrever SEMICOLON .

    ID              reduce using rule 5 (statement -> escrever SEMICOLON .)
    ESCREVER        reduce using rule 5 (statement -> escrever SEMICOLON .)
    ENTRADA         reduce using rule 5 (statement -> escrever SEMICOLON .)
    FUNCAO          reduce using rule 5 (statement -> escrever SEMICOLON .)
    LISTA           reduce using rule 5 (statement -> escrever SEMICOLON .)
    MAP             reduce using rule 5 (statement -> escrever SEMICOLON .)
    FOLD            reduce using rule 5 (statement -> escrever SEMICOLON .)
    $end            reduce using rule 5 (statement -> escrever SEMICOLON .)
    FIM             reduce using rule 5 (statement -> escrever SEMICOLON .)


state 21

    (6) statement -> entrada SEMICOLON .

    ID              reduce using rule 6 (statement -> entrada SEMICOLON .)
    ESCREVER        reduce using rule 6 (statement -> entrada SEMICOLON .)
    ENTRADA         reduce using rule 6 (statement -> entrada SEMICOLON .)
    FUNCAO          reduce using rule 6 (statement -> entrada SEMICOLON .)
    LISTA           reduce using rule 6 (statement -> entrada SEMICOLON .)
    MAP             reduce using rule 6 (statement -> entrada SEMICOLON .)
    FOLD            reduce using rule 6 (statement -> entrada SEMICOLON .)
    $end            reduce using rule 6 (statement -> entrada SEMICOLON .)
    FIM             reduce using rule 6 (statement -> entrada SEMICOLON .)


state 22

    (11) assignment -> ID EQUALS . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 36

state 23

    (12) escrever -> ESCREVER expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    SEMICOLON       reduce using rule 12 (escrever -> ESCREVER expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    CONCATENATE     shift and go to state 43


state 24

    (29) expression -> NOT . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 44

state 25

    (30) expression -> LPAREN . expression RPAREN
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 45

state 26

    (31) expression -> NUMBER .

    PLUS            reduce using rule 31 (expression -> NUMBER .)
    MINUS           reduce using rule 31 (expression -> NUMBER .)
    TIMES           reduce using rule 31 (expression -> NUMBER .)
    DIVIDE          reduce using rule 31 (expression -> NUMBER .)
    AND             reduce using rule 31 (expression -> NUMBER .)
    OR              reduce using rule 31 (expression -> NUMBER .)
    CONCATENATE     reduce using rule 31 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 31 (expression -> NUMBER .)
    RPAREN          reduce using rule 31 (expression -> NUMBER .)
    COMMA           reduce using rule 31 (expression -> NUMBER .)


state 27

    (32) expression -> ID .
    (33) expression -> ID . EXCLAMATION_MARK
    (34) expression -> ID . QUESTION_MARK

    PLUS            reduce using rule 32 (expression -> ID .)
    MINUS           reduce using rule 32 (expression -> ID .)
    TIMES           reduce using rule 32 (expression -> ID .)
    DIVIDE          reduce using rule 32 (expression -> ID .)
    AND             reduce using rule 32 (expression -> ID .)
    OR              reduce using rule 32 (expression -> ID .)
    CONCATENATE     reduce using rule 32 (expression -> ID .)
    SEMICOLON       reduce using rule 32 (expression -> ID .)
    RPAREN          reduce using rule 32 (expression -> ID .)
    COMMA           reduce using rule 32 (expression -> ID .)
    EXCLAMATION_MARK shift and go to state 46
    QUESTION_MARK   shift and go to state 47


state 28

    (35) expression -> STRING .

    PLUS            reduce using rule 35 (expression -> STRING .)
    MINUS           reduce using rule 35 (expression -> STRING .)
    TIMES           reduce using rule 35 (expression -> STRING .)
    DIVIDE          reduce using rule 35 (expression -> STRING .)
    AND             reduce using rule 35 (expression -> STRING .)
    OR              reduce using rule 35 (expression -> STRING .)
    CONCATENATE     reduce using rule 35 (expression -> STRING .)
    SEMICOLON       reduce using rule 35 (expression -> STRING .)
    RPAREN          reduce using rule 35 (expression -> STRING .)
    COMMA           reduce using rule 35 (expression -> STRING .)


state 29

    (37) expression -> TRUE .

    PLUS            reduce using rule 37 (expression -> TRUE .)
    MINUS           reduce using rule 37 (expression -> TRUE .)
    TIMES           reduce using rule 37 (expression -> TRUE .)
    DIVIDE          reduce using rule 37 (expression -> TRUE .)
    AND             reduce using rule 37 (expression -> TRUE .)
    OR              reduce using rule 37 (expression -> TRUE .)
    CONCATENATE     reduce using rule 37 (expression -> TRUE .)
    SEMICOLON       reduce using rule 37 (expression -> TRUE .)
    RPAREN          reduce using rule 37 (expression -> TRUE .)
    COMMA           reduce using rule 37 (expression -> TRUE .)


state 30

    (38) expression -> FALSE .

    PLUS            reduce using rule 38 (expression -> FALSE .)
    MINUS           reduce using rule 38 (expression -> FALSE .)
    TIMES           reduce using rule 38 (expression -> FALSE .)
    DIVIDE          reduce using rule 38 (expression -> FALSE .)
    AND             reduce using rule 38 (expression -> FALSE .)
    OR              reduce using rule 38 (expression -> FALSE .)
    CONCATENATE     reduce using rule 38 (expression -> FALSE .)
    SEMICOLON       reduce using rule 38 (expression -> FALSE .)
    RPAREN          reduce using rule 38 (expression -> FALSE .)
    COMMA           reduce using rule 38 (expression -> FALSE .)


state 31

    (13) entrada -> ENTRADA LPAREN . expression RPAREN
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 48

state 32

    (14) funcao -> FUNCAO ID . LPAREN param_list RPAREN statement_list FIM

    LPAREN          shift and go to state 49


state 33

    (18) lista -> LISTA LPAREN . expression_list RPAREN
    (19) expression_list -> . expression
    (20) expression_list -> . expression_list COMMA expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression_list                shift and go to state 50
    expression                     shift and go to state 51

state 34

    (21) map -> MAP LPAREN . expression COMMA expression RPAREN
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 52

state 35

    (22) fold -> FOLD LPAREN . expression COMMA expression COMMA expression RPAREN
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 53

state 36

    (11) assignment -> ID EQUALS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    SEMICOLON       reduce using rule 11 (assignment -> ID EQUALS expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    CONCATENATE     shift and go to state 43


state 37

    (23) expression -> expression PLUS . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 54

state 38

    (24) expression -> expression MINUS . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 55

state 39

    (25) expression -> expression TIMES . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 56

state 40

    (26) expression -> expression DIVIDE . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 57

state 41

    (27) expression -> expression AND . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 58

state 42

    (28) expression -> expression OR . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 59

state 43

    (36) expression -> expression CONCATENATE . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 60

state 44

    (29) expression -> NOT expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    PLUS            reduce using rule 29 (expression -> NOT expression .)
    MINUS           reduce using rule 29 (expression -> NOT expression .)
    TIMES           reduce using rule 29 (expression -> NOT expression .)
    DIVIDE          reduce using rule 29 (expression -> NOT expression .)
    AND             reduce using rule 29 (expression -> NOT expression .)
    OR              reduce using rule 29 (expression -> NOT expression .)
    CONCATENATE     reduce using rule 29 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 29 (expression -> NOT expression .)
    RPAREN          reduce using rule 29 (expression -> NOT expression .)
    COMMA           reduce using rule 29 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! TIMES           [ shift and go to state 39 ]
  ! DIVIDE          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! CONCATENATE     [ shift and go to state 43 ]


state 45

    (30) expression -> LPAREN expression . RPAREN
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    RPAREN          shift and go to state 61
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    CONCATENATE     shift and go to state 43


state 46

    (33) expression -> ID EXCLAMATION_MARK .

    PLUS            reduce using rule 33 (expression -> ID EXCLAMATION_MARK .)
    MINUS           reduce using rule 33 (expression -> ID EXCLAMATION_MARK .)
    TIMES           reduce using rule 33 (expression -> ID EXCLAMATION_MARK .)
    DIVIDE          reduce using rule 33 (expression -> ID EXCLAMATION_MARK .)
    AND             reduce using rule 33 (expression -> ID EXCLAMATION_MARK .)
    OR              reduce using rule 33 (expression -> ID EXCLAMATION_MARK .)
    CONCATENATE     reduce using rule 33 (expression -> ID EXCLAMATION_MARK .)
    SEMICOLON       reduce using rule 33 (expression -> ID EXCLAMATION_MARK .)
    RPAREN          reduce using rule 33 (expression -> ID EXCLAMATION_MARK .)
    COMMA           reduce using rule 33 (expression -> ID EXCLAMATION_MARK .)


state 47

    (34) expression -> ID QUESTION_MARK .

    PLUS            reduce using rule 34 (expression -> ID QUESTION_MARK .)
    MINUS           reduce using rule 34 (expression -> ID QUESTION_MARK .)
    TIMES           reduce using rule 34 (expression -> ID QUESTION_MARK .)
    DIVIDE          reduce using rule 34 (expression -> ID QUESTION_MARK .)
    AND             reduce using rule 34 (expression -> ID QUESTION_MARK .)
    OR              reduce using rule 34 (expression -> ID QUESTION_MARK .)
    CONCATENATE     reduce using rule 34 (expression -> ID QUESTION_MARK .)
    SEMICOLON       reduce using rule 34 (expression -> ID QUESTION_MARK .)
    RPAREN          reduce using rule 34 (expression -> ID QUESTION_MARK .)
    COMMA           reduce using rule 34 (expression -> ID QUESTION_MARK .)


state 48

    (13) entrada -> ENTRADA LPAREN expression . RPAREN
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    RPAREN          shift and go to state 62
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    CONCATENATE     shift and go to state 43


state 49

    (14) funcao -> FUNCAO ID LPAREN . param_list RPAREN statement_list FIM
    (15) param_list -> . ID
    (16) param_list -> . param_list COMMA ID
    (17) param_list -> . empty
    (39) empty -> .

    ID              shift and go to state 63
    RPAREN          reduce using rule 39 (empty -> .)
    COMMA           reduce using rule 39 (empty -> .)

    param_list                     shift and go to state 64
    empty                          shift and go to state 65

state 50

    (18) lista -> LISTA LPAREN expression_list . RPAREN
    (20) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 66
    COMMA           shift and go to state 67


state 51

    (19) expression_list -> expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    RPAREN          reduce using rule 19 (expression_list -> expression .)
    COMMA           reduce using rule 19 (expression_list -> expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    CONCATENATE     shift and go to state 43


state 52

    (21) map -> MAP LPAREN expression . COMMA expression RPAREN
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    COMMA           shift and go to state 68
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    CONCATENATE     shift and go to state 43


state 53

    (22) fold -> FOLD LPAREN expression . COMMA expression COMMA expression RPAREN
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    COMMA           shift and go to state 69
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    CONCATENATE     shift and go to state 43


state 54

    (23) expression -> expression PLUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    PLUS            reduce using rule 23 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 23 (expression -> expression PLUS expression .)
    AND             reduce using rule 23 (expression -> expression PLUS expression .)
    OR              reduce using rule 23 (expression -> expression PLUS expression .)
    CONCATENATE     reduce using rule 23 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 23 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 23 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 23 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40

  ! TIMES           [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! CONCATENATE     [ shift and go to state 43 ]


state 55

    (24) expression -> expression MINUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    PLUS            reduce using rule 24 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 24 (expression -> expression MINUS expression .)
    AND             reduce using rule 24 (expression -> expression MINUS expression .)
    OR              reduce using rule 24 (expression -> expression MINUS expression .)
    CONCATENATE     reduce using rule 24 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 24 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 24 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 24 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40

  ! TIMES           [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! CONCATENATE     [ shift and go to state 43 ]


state 56

    (25) expression -> expression TIMES expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    PLUS            reduce using rule 25 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 25 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 25 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 25 (expression -> expression TIMES expression .)
    AND             reduce using rule 25 (expression -> expression TIMES expression .)
    OR              reduce using rule 25 (expression -> expression TIMES expression .)
    CONCATENATE     reduce using rule 25 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 25 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 25 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! TIMES           [ shift and go to state 39 ]
  ! DIVIDE          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! CONCATENATE     [ shift and go to state 43 ]


state 57

    (26) expression -> expression DIVIDE expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    PLUS            reduce using rule 26 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 26 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 26 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 26 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 26 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 26 (expression -> expression DIVIDE expression .)
    CONCATENATE     reduce using rule 26 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 26 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 26 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! TIMES           [ shift and go to state 39 ]
  ! DIVIDE          [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! CONCATENATE     [ shift and go to state 43 ]


state 58

    (27) expression -> expression AND expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    AND             reduce using rule 27 (expression -> expression AND expression .)
    OR              reduce using rule 27 (expression -> expression AND expression .)
    CONCATENATE     reduce using rule 27 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression AND expression .)
    RPAREN          reduce using rule 27 (expression -> expression AND expression .)
    COMMA           reduce using rule 27 (expression -> expression AND expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40

  ! PLUS            [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! CONCATENATE     [ shift and go to state 43 ]


state 59

    (28) expression -> expression OR expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    AND             reduce using rule 28 (expression -> expression OR expression .)
    OR              reduce using rule 28 (expression -> expression OR expression .)
    CONCATENATE     reduce using rule 28 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression OR expression .)
    RPAREN          reduce using rule 28 (expression -> expression OR expression .)
    COMMA           reduce using rule 28 (expression -> expression OR expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40

  ! PLUS            [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression OR expression .) ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]
  ! CONCATENATE     [ shift and go to state 43 ]


state 60

    (36) expression -> expression CONCATENATE expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for CONCATENATE resolved as shift
    SEMICOLON       reduce using rule 36 (expression -> expression CONCATENATE expression .)
    RPAREN          reduce using rule 36 (expression -> expression CONCATENATE expression .)
    COMMA           reduce using rule 36 (expression -> expression CONCATENATE expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    CONCATENATE     shift and go to state 43

  ! PLUS            [ reduce using rule 36 (expression -> expression CONCATENATE expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression CONCATENATE expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression CONCATENATE expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression CONCATENATE expression .) ]
  ! AND             [ reduce using rule 36 (expression -> expression CONCATENATE expression .) ]
  ! OR              [ reduce using rule 36 (expression -> expression CONCATENATE expression .) ]
  ! CONCATENATE     [ reduce using rule 36 (expression -> expression CONCATENATE expression .) ]


state 61

    (30) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    CONCATENATE     reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 30 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 30 (expression -> LPAREN expression RPAREN .)


state 62

    (13) entrada -> ENTRADA LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 13 (entrada -> ENTRADA LPAREN expression RPAREN .)


state 63

    (15) param_list -> ID .

    RPAREN          reduce using rule 15 (param_list -> ID .)
    COMMA           reduce using rule 15 (param_list -> ID .)


state 64

    (14) funcao -> FUNCAO ID LPAREN param_list . RPAREN statement_list FIM
    (16) param_list -> param_list . COMMA ID

    RPAREN          shift and go to state 70
    COMMA           shift and go to state 71


state 65

    (17) param_list -> empty .

    RPAREN          reduce using rule 17 (param_list -> empty .)
    COMMA           reduce using rule 17 (param_list -> empty .)


state 66

    (18) lista -> LISTA LPAREN expression_list RPAREN .

    ID              reduce using rule 18 (lista -> LISTA LPAREN expression_list RPAREN .)
    ESCREVER        reduce using rule 18 (lista -> LISTA LPAREN expression_list RPAREN .)
    ENTRADA         reduce using rule 18 (lista -> LISTA LPAREN expression_list RPAREN .)
    FUNCAO          reduce using rule 18 (lista -> LISTA LPAREN expression_list RPAREN .)
    LISTA           reduce using rule 18 (lista -> LISTA LPAREN expression_list RPAREN .)
    MAP             reduce using rule 18 (lista -> LISTA LPAREN expression_list RPAREN .)
    FOLD            reduce using rule 18 (lista -> LISTA LPAREN expression_list RPAREN .)
    $end            reduce using rule 18 (lista -> LISTA LPAREN expression_list RPAREN .)
    FIM             reduce using rule 18 (lista -> LISTA LPAREN expression_list RPAREN .)


state 67

    (20) expression_list -> expression_list COMMA . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 72

state 68

    (21) map -> MAP LPAREN expression COMMA . expression RPAREN
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 73

state 69

    (22) fold -> FOLD LPAREN expression COMMA . expression COMMA expression RPAREN
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 74

state 70

    (14) funcao -> FUNCAO ID LPAREN param_list RPAREN . statement_list FIM
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment SEMICOLON
    (5) statement -> . escrever SEMICOLON
    (6) statement -> . entrada SEMICOLON
    (7) statement -> . funcao
    (8) statement -> . lista
    (9) statement -> . map
    (10) statement -> . fold
    (11) assignment -> . ID EQUALS expression
    (12) escrever -> . ESCREVER expression
    (13) entrada -> . ENTRADA LPAREN expression RPAREN
    (14) funcao -> . FUNCAO ID LPAREN param_list RPAREN statement_list FIM
    (18) lista -> . LISTA LPAREN expression_list RPAREN
    (21) map -> . MAP LPAREN expression COMMA expression RPAREN
    (22) fold -> . FOLD LPAREN expression COMMA expression COMMA expression RPAREN

    ID              shift and go to state 11
    ESCREVER        shift and go to state 12
    ENTRADA         shift and go to state 13
    FUNCAO          shift and go to state 14
    LISTA           shift and go to state 15
    MAP             shift and go to state 16
    FOLD            shift and go to state 17

    statement_list                 shift and go to state 75
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    escrever                       shift and go to state 5
    entrada                        shift and go to state 6
    funcao                         shift and go to state 7
    lista                          shift and go to state 8
    map                            shift and go to state 9
    fold                           shift and go to state 10

state 71

    (16) param_list -> param_list COMMA . ID

    ID              shift and go to state 76


state 72

    (20) expression_list -> expression_list COMMA expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    RPAREN          reduce using rule 20 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 20 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    CONCATENATE     shift and go to state 43


state 73

    (21) map -> MAP LPAREN expression COMMA expression . RPAREN
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    RPAREN          shift and go to state 77
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    CONCATENATE     shift and go to state 43


state 74

    (22) fold -> FOLD LPAREN expression COMMA expression . COMMA expression RPAREN
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    COMMA           shift and go to state 78
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    CONCATENATE     shift and go to state 43


state 75

    (14) funcao -> FUNCAO ID LPAREN param_list RPAREN statement_list . FIM
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment SEMICOLON
    (5) statement -> . escrever SEMICOLON
    (6) statement -> . entrada SEMICOLON
    (7) statement -> . funcao
    (8) statement -> . lista
    (9) statement -> . map
    (10) statement -> . fold
    (11) assignment -> . ID EQUALS expression
    (12) escrever -> . ESCREVER expression
    (13) entrada -> . ENTRADA LPAREN expression RPAREN
    (14) funcao -> . FUNCAO ID LPAREN param_list RPAREN statement_list FIM
    (18) lista -> . LISTA LPAREN expression_list RPAREN
    (21) map -> . MAP LPAREN expression COMMA expression RPAREN
    (22) fold -> . FOLD LPAREN expression COMMA expression COMMA expression RPAREN

    FIM             shift and go to state 79
    ID              shift and go to state 11
    ESCREVER        shift and go to state 12
    ENTRADA         shift and go to state 13
    FUNCAO          shift and go to state 14
    LISTA           shift and go to state 15
    MAP             shift and go to state 16
    FOLD            shift and go to state 17

    statement                      shift and go to state 18
    assignment                     shift and go to state 4
    escrever                       shift and go to state 5
    entrada                        shift and go to state 6
    funcao                         shift and go to state 7
    lista                          shift and go to state 8
    map                            shift and go to state 9
    fold                           shift and go to state 10

state 76

    (16) param_list -> param_list COMMA ID .

    RPAREN          reduce using rule 16 (param_list -> param_list COMMA ID .)
    COMMA           reduce using rule 16 (param_list -> param_list COMMA ID .)


state 77

    (21) map -> MAP LPAREN expression COMMA expression RPAREN .

    ID              reduce using rule 21 (map -> MAP LPAREN expression COMMA expression RPAREN .)
    ESCREVER        reduce using rule 21 (map -> MAP LPAREN expression COMMA expression RPAREN .)
    ENTRADA         reduce using rule 21 (map -> MAP LPAREN expression COMMA expression RPAREN .)
    FUNCAO          reduce using rule 21 (map -> MAP LPAREN expression COMMA expression RPAREN .)
    LISTA           reduce using rule 21 (map -> MAP LPAREN expression COMMA expression RPAREN .)
    MAP             reduce using rule 21 (map -> MAP LPAREN expression COMMA expression RPAREN .)
    FOLD            reduce using rule 21 (map -> MAP LPAREN expression COMMA expression RPAREN .)
    $end            reduce using rule 21 (map -> MAP LPAREN expression COMMA expression RPAREN .)
    FIM             reduce using rule 21 (map -> MAP LPAREN expression COMMA expression RPAREN .)


state 78

    (22) fold -> FOLD LPAREN expression COMMA expression COMMA . expression RPAREN
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression AND expression
    (28) expression -> . expression OR expression
    (29) expression -> . NOT expression
    (30) expression -> . LPAREN expression RPAREN
    (31) expression -> . NUMBER
    (32) expression -> . ID
    (33) expression -> . ID EXCLAMATION_MARK
    (34) expression -> . ID QUESTION_MARK
    (35) expression -> . STRING
    (36) expression -> . expression CONCATENATE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE

    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 26
    ID              shift and go to state 27
    STRING          shift and go to state 28
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30

    expression                     shift and go to state 80

state 79

    (14) funcao -> FUNCAO ID LPAREN param_list RPAREN statement_list FIM .

    ID              reduce using rule 14 (funcao -> FUNCAO ID LPAREN param_list RPAREN statement_list FIM .)
    ESCREVER        reduce using rule 14 (funcao -> FUNCAO ID LPAREN param_list RPAREN statement_list FIM .)
    ENTRADA         reduce using rule 14 (funcao -> FUNCAO ID LPAREN param_list RPAREN statement_list FIM .)
    FUNCAO          reduce using rule 14 (funcao -> FUNCAO ID LPAREN param_list RPAREN statement_list FIM .)
    LISTA           reduce using rule 14 (funcao -> FUNCAO ID LPAREN param_list RPAREN statement_list FIM .)
    MAP             reduce using rule 14 (funcao -> FUNCAO ID LPAREN param_list RPAREN statement_list FIM .)
    FOLD            reduce using rule 14 (funcao -> FUNCAO ID LPAREN param_list RPAREN statement_list FIM .)
    $end            reduce using rule 14 (funcao -> FUNCAO ID LPAREN param_list RPAREN statement_list FIM .)
    FIM             reduce using rule 14 (funcao -> FUNCAO ID LPAREN param_list RPAREN statement_list FIM .)


state 80

    (22) fold -> FOLD LPAREN expression COMMA expression COMMA expression . RPAREN
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . AND expression
    (28) expression -> expression . OR expression
    (36) expression -> expression . CONCATENATE expression

    RPAREN          shift and go to state 81
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42
    CONCATENATE     shift and go to state 43


state 81

    (22) fold -> FOLD LPAREN expression COMMA expression COMMA expression RPAREN .

    ID              reduce using rule 22 (fold -> FOLD LPAREN expression COMMA expression COMMA expression RPAREN .)
    ESCREVER        reduce using rule 22 (fold -> FOLD LPAREN expression COMMA expression COMMA expression RPAREN .)
    ENTRADA         reduce using rule 22 (fold -> FOLD LPAREN expression COMMA expression COMMA expression RPAREN .)
    FUNCAO          reduce using rule 22 (fold -> FOLD LPAREN expression COMMA expression COMMA expression RPAREN .)
    LISTA           reduce using rule 22 (fold -> FOLD LPAREN expression COMMA expression COMMA expression RPAREN .)
    MAP             reduce using rule 22 (fold -> FOLD LPAREN expression COMMA expression COMMA expression RPAREN .)
    FOLD            reduce using rule 22 (fold -> FOLD LPAREN expression COMMA expression COMMA expression RPAREN .)
    $end            reduce using rule 22 (fold -> FOLD LPAREN expression COMMA expression COMMA expression RPAREN .)
    FIM             reduce using rule 22 (fold -> FOLD LPAREN expression COMMA expression COMMA expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 60 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 60 resolved as shift
WARNING: shift/reduce conflict for AND in state 60 resolved as shift
WARNING: shift/reduce conflict for OR in state 60 resolved as shift
WARNING: shift/reduce conflict for CONCATENATE in state 60 resolved as shift
